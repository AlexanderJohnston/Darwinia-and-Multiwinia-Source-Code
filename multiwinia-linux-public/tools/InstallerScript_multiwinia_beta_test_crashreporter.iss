; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

[Setup]
AppName=Multiwinia Beta Test
AppVerName=Multiwinia Beta Test v1.9.33
AppPublisher=Introversion Software Ltd
Compression=zip/5
DefaultDirName={pf}\Multiwinia Beta Test
DefaultGroupName=Multiwinia Beta Test
LicenseFile=..\docs\IntroversionEULA.txt
OutputBaseFilename=setup
SetupIconFile=..\targets\vs2005\darwinia.ico

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: checkablealone

[Files]
Source: "..\build\multiwinia.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\build\ambx.dat"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\build\init.dat"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\build\language.dat"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\build\main.dat"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\build\menusounds.dat"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\build\sounds.dat"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\build\sounds2.dat"; DestDir: "{app}"; Flags: ignoreversion
;Source: "..\build\ncftpput.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\build\MultiwiniaSupport.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\build\MultiwiniaSupport.ini"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\build\dbghelp.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\build\autopatch.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\build\copy_assist.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\build\version"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\build\origin"; DestDir: "{app}"; Flags: ignoreversion onlyifdoesntexist
Source: "..\build\ProfileLocator.exe"; DestDir: "{app}"; Flags: ignoreversion

; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{group}\Multiwinia Beta Test"; Filename: "{app}\autopatch.exe"; WorkingDir: "{app}"
Name: "{group}\Repair Multiwinia"; Filename: "{app}\autopatch.exe"; WorkingDir: "{app}"; Parameters: "--repair"
Name: "{group}\Revert to previous Multiwinia"; Filename: "{app}\autopatch.exe"; WorkingDir: "{app}"; Parameters: "--revert"
Name: "{group}\Multiwinia Website"; Filename: "http://www.multiwinia.co.uk/"
; Name: "{group}\Support Website"; Filename: "http://www.multiwinia.co.uk/support"
Name: "{group}\Support Website"; Filename: "http://forums.introversion.co.uk/multiwinia/"
Name: "{group}\Open Multiwinia Profile"; Filename: "{app}\ProfileLocator.exe"; WorkingDir: "{app}"
Name: "{group}\{cm:UninstallProgram,Multiwinia Beta Test}"; Filename: "{uninstallexe}"
Name: "{userdesktop}\Multiwinia Beta Test"; Filename: "{app}\autopatch.exe"; WorkingDir: "{app}"; Tasks: desktopicon

[UninstallDelete]
Type: filesandordirs; Name: "{app}\users"
Type: filesandordirs; Name: "{app}\benchmarks"
Type: filesandordirs; Name: "{app}\screenshots"
Type: files; Name: "{app}\preferences.txt"
Type: files; Name: "{app}\authkey"
Type: files; Name: "{app}\debug.txt"
Type: files; Name: "{app}\syncerror-*.txt"
Type: files; Name: "{app}\inputprefs_debug.txt"
Type: files; Name: "{app}\userprefs.txt"
Type: files; Name: "{app}\game-history.txt"
Type: files; Name: "{app}\blackbox.txt"
Type: files; Name: "{app}\dxdiag.txt"
Type: files; Name: "{app}\CRASH.DMP"
Type: files; Name: "{app}\ERRORLOG.TXT"
Type: files; Name: "{app}\dxdiag_info.txt"
Type: files; Name: "{app}\multiwinia.zip"
Type: files; Name: "{app}\multiwinia.zip.*"
Type: files; Name: "{app}\stdout.txt"
Type: files; Name: "{app}\autopatch_debug.txt"
Type: files; Name: "{app}\copier_stdout.txt"
Type: files; Name: "{app}\copier_debug.txt"
Type: filesandordirs; Name: "{app}\backup_*"
Type: filesandordirs; Name: "{app}\revert_*"

;[Code]
;//importing a Windows API function
;function GetSystemDirectory(lpBuffer: PChar; uSize: Integer): Integer;
;external 'GetSystemDirectoryA@kernel32.dll stdcall';
;
;function GetCommandLine(): PChar;
;external 'GetCommandLineA@kernel32.dll stdcall';
;
;function SystemDirectory(): String;
;var
;  Len: Integer;
;  S: String;
;begin
;  Len := 512;
;  SetLength(S, Len);
;  Len := GetSystemDirectory(PChar(S), Len);
;  SetLength(S, Len);
;  Result := S;
;  if Result[Length(Result)] <> '\' then
;    Result := Result + '\'; 
;end;
;
;function CheckDirectx(): Boolean;
;var
;  PathSystem: String;
;begin
;  PathSystem := SystemDirectory();
;
;  Result := FileExists( PathSystem + 'd3dx9_32.dll' ) and FileExists( PathSystem + 'xinput1_3.dll' );  
;end;
;
;function CommandLineNoCheckDirectx(): Boolean;
;var
;  CommandLine: String;
;begin
;  CommandLine := GetCommandLine();
;
;  Result := Pos( '--NoDirectXCheck', CommandLine ) <> 0;
;end;
;
;function InitializeSetup(): Boolean;
;begin
;  if (not CommandLineNoCheckDirectx()) and (not CheckDirectx()) then
;  begin
;    Result := false;
;    MsgBox('Please update DirectX at http://www.microsoft.com/directx/', mbInformation, MB_OK);
;  end
;  else
;    Result := true;
;end;
