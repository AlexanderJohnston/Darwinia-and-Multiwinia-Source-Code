- Letter contains
  - sequence id
  - to address
  - list of updates for frame n
  - list of updates for frame n - 1
  - list of updates for frame n - 2

-------------------------------------------------

DATA

- Server Send Queue         Data awaiting posting
- Server Receive List       Data received from clients

- Client Send Queue         Data for server awaiting sending
- Client Receive List       Data from server awaiting processing


-------------------------------------------------



- Server Send Thread
- Client Send Thread
    while(true)
    {
        while(queue not empty)
        {
            send
        }
        Suspend()
    }

- Server receive Callback/Thread
- Client Receive Callback/Thread


- Server Advance 
    Build a letter from all network data
    Make a copy for every client
    Add each copy to the Send Queue


- Main Thread
    while(true)
    {
        If I am a Server
            if (time >= nextServerTimeSlice)
                Server advance loop

        if (time >= nextClientTimeSlice)
            Client heavy weight advance
                    
        if (there is time)
            Client light weight advance
            Client render
    }


- Client Light Weight Advance
    for i = 0 to 100000
        timeDelta = realTime - lastReceivedTimeStamp
        bestGuessPos[i] = lastKnownPos[i] + timeDelta * lastReceivedVel[i]

